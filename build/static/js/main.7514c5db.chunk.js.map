{"version":3,"sources":["redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-selectors.js","components/Filter/Filter.js","redux/phonebook/phonebook-api.js","redux/phonebook/phonebook-operation.js","components/ContactsList/ContactsList.js","components/Form/Form.js","App.js","redux/phonebook/phonebook-redusers.js","redux/store.js","index.js"],"names":["filterContact","createAction","contactsRequest","fetchContactsSuccess","contactsError","addContactsSuccess","deleteContactsSuccess","defaultExport","stateFilter","state","contacts","filter","stateItems","items","visibleItems","createSelector","normalizedFilter","toLowerCase","item","name","includes","useStyles","makeStyles","TextField","display","marginBottom","Filter","dispatch","useDispatch","classes","useSelector","value","onChange","e","actions","currentTarget","required","fullWidth","className","id","label","type","variant","placeholder","fetchContacts","a","axios","get","data","addContacts","number","shortid","generate","some","contact","post","deleteContacts","delete","defaults","baseURL","contactsActions","contactsAPI","message","List","marginTop","Loader","justifyContent","alignItems","Typography","textAlign","ContactsList","allContacts","visibleContacts","isLoaderRender","isLoading","getIsLoading","errorMessage","error","getError","useEffect","length","color","component","height","width","timeout","map","ListItem","ListItemAvatar","Avatar","ListItemText","primary","ListItemSecondaryAction","IconButton","onClick","contactsOperations","edge","Form","flexDirection","Button","Alert","useForm","register","handleSubmit","errors","formState","useState","setName","setNumber","onSubmit","alert","helperText","severity","minLength","disableElevation","size","Container","padding","App","maxWidth","align","itemReducer","createReducer","_","payload","filterReducer","contactsReducer","combineReducers","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7514c5db.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\n\nexport const filterContact = createAction(\"contacts/CHANGE_FILTER\");\n\nexport const contactsRequest = createAction(\"contacts/fetchContactsRequest\");\nexport const fetchContactsSuccess = createAction(\n  \"contacts/fetchContactsSuccess\"\n);\nexport const contactsError = createAction(\"contacts/fetchContactsError\");\n\nexport const addContactsSuccess = createAction(\"contacts/addContactsSuccess\");\n\nexport const deleteContactsSuccess = createAction(\n  \"contacts/deleteContactsSuccess\"\n);\n\nconst defaultExport = {\n  filterContact,\n  contactsRequest,\n  fetchContactsSuccess,\n  contactsError,\n  addContactsSuccess,\n  deleteContactsSuccess,\n};\n\nexport default defaultExport;\n","import { createSelector } from \"reselect\";\n\nexport const stateFilter = (state) => state.contacts.filter;\nexport const stateItems = (state) => state.contacts.items;\nexport const getIsLoading = (state) => state.contacts.isLoading;\nexport const getError = (state) => state.contacts.error;\n\nexport const visibleItems = createSelector(\n  [stateItems, stateFilter],\n  (items, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return items.filter((item) =>\n      item.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport * as actions from \"../../redux/phonebook/phonebook-actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { stateFilter } from \"../../redux/phonebook/phonebook-selectors\";\nconst useStyles = makeStyles({\n  TextField: {\n    display: \"block\",\n    marginBottom: 10,\n  },\n});\nexport default function Filter() {\n  const dispatch = useDispatch();\n\n  const classes = useStyles();\n  const filter = useSelector((state) => stateFilter(state));\n  return (\n    <TextField\n      value={filter}\n      onChange={(e) => dispatch(actions.filterContact(e.currentTarget.value))}\n      required\n      fullWidth\n      className={classes.TextField}\n      id=\"filter\"\n      label=\"Find contact by name \"\n      type=\"text\"\n      variant=\"outlined\"\n      placeholder=\"enter  contact's name\"\n    />\n  );\n}\n","import shortid from \"shortid\";\nimport axios from \"axios\";\naxios.defaults.baseURL = \" http://localhost:3000\";\nexport async function fetchContacts() {\n  const { data } = await axios.get(\"/contacts\");\n  return data;\n}\n\nexport async function addContacts({ name, number }, contacts) {\n  const data = {\n    id: shortid.generate(),\n    name,\n    number,\n  };\n  let repeat = contacts.some(\n    (contact) => contact.name.toLowerCase() === name.toLowerCase()\n  );\n  if (repeat) {\n    return null;\n  }\n  axios.post(\"http://localhost:3000/contacts\", data);\n  return data;\n}\nexport async function deleteContacts(id) {\n  axios.delete(`http://localhost:3000/contacts/${id}`);\n  return id;\n}\n","import * as contactsActions from \"./phonebook-actions\";\nimport * as contactsAPI from \"./phonebook-api\";\nexport const fetchContacts = () => async (dispatch) => {\n  dispatch(contactsActions.contactsRequest());\n  try {\n    const contacts = await contactsAPI.fetchContacts();\n    dispatch(contactsActions.fetchContactsSuccess(contacts));\n  } catch (error) {\n    dispatch(contactsActions.contactsError(error.message));\n  }\n};\n\nexport const addContacts =\n  ({ name, number }, contacts) =>\n  async (dispatch) => {\n    dispatch(contactsActions.contactsRequest());\n    try {\n      const data = await contactsAPI.addContacts({ name, number }, contacts);\n      if (!data) {\n        return alert(\"this contact is already in the phone book\");\n      }\n      dispatch(contactsActions.addContactsSuccess(data));\n    } catch (error) {\n      dispatch(contactsActions.contactsError(error.message));\n    }\n  };\n\nexport const deleteContacts = (id) => async (dispatch) => {\n  dispatch(contactsActions.contactsRequest());\n  try {\n    const data = await contactsAPI.deleteContacts(id);\n    dispatch(contactsActions.deleteContactsSuccess(data));\n  } catch (error) {\n    dispatch(contactsActions.contactsError(error.message));\n  }\n};\n","import List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport {\n  visibleItems,\n  getIsLoading,\n  getError,\n  stateItems,\n} from \"../../redux/phonebook/phonebook-selectors\";\nimport * as contactsOperations from \"../../redux/phonebook/phonebook-operation\";\nimport { useEffect } from \"react\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\nimport Typography from \"@material-ui/core/Typography\";\nconst useStyles = makeStyles({\n  List: {\n    marginTop: 20,\n  },\n  Loader: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  Typography: {\n    marginTop: 20,\n    textAlign: \"center\",\n  },\n});\nexport default function ContactsList() {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const allContacts = useSelector((state) => stateItems(state));\n  const visibleContacts = useSelector((state) => visibleItems(state));\n  const isLoaderRender = useSelector((state) => getIsLoading(state));\n  const errorMessage = useSelector((state) => getError(state));\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n  return (\n    <>\n      {errorMessage && allContacts.length < 1 && (\n        <Typography\n          color=\"primary\"\n          className={classes.Typography}\n          variant=\"h3\"\n          component=\"h2\"\n        >\n          {errorMessage}. Try another time\n        </Typography>\n      )}\n      {isLoaderRender && allContacts.length < 1 ? (\n        <Loader\n          className={classes.Loader}\n          type=\"ThreeDots\"\n          color=\"#3f51b5\"\n          height={100}\n          width={100}\n          timeout={3000} //3 secs\n        />\n      ) : (\n        <></>\n      )}\n\n      <List className={classes.List}>\n        {visibleContacts ? (\n          visibleContacts.map(({ name, number, id }) => (\n            <ListItem key={id}>\n              <ListItemAvatar>\n                <Avatar>\n                  <AccountCircleIcon aria-label=\"person\" />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={name} />\n              <ListItemText color=\"primary\" primary={number} />\n              <ListItemSecondaryAction>\n                <IconButton\n                  id={id}\n                  onClick={async (e) => {\n                    const { id } = e.currentTarget;\n                    dispatch(contactsOperations.deleteContacts(id));\n                  }}\n                  edge=\"end\"\n                  aria-label=\"delete\"\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))\n        ) : (\n          <></>\n        )}\n      </List>\n    </>\n  );\n}\n","import Alert from \"@material-ui/lab/Alert\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { useForm } from \"react-hook-form\";\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { stateItems } from \"../../redux/phonebook/phonebook-selectors\";\nimport * as contactsOperations from \"../../redux/phonebook/phonebook-operation\";\nconst useStyles = makeStyles({\n  TextField: {\n    display: \"block\",\n    marginBottom: 10,\n  },\n  Form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    marginBottom: 30,\n  },\n  Button: {\n    display: \"block\",\n  },\n\n  Alert: {\n    marginTop: 20,\n    marginBottom: 30,\n  },\n});\nexport default function Form() {\n  const dispatch = useDispatch();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n  const classes = useStyles();\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const contacts = useSelector((state) => stateItems(state));\n  const onSubmit = (data) => {\n    dispatch(contactsOperations.addContacts(data, contacts));\n    setName(\"\");\n    setNumber(\"\");\n  };\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className={classes.Form}>\n      <TextField\n        {...register(\"name\", {\n          required: true,\n        })}\n        fullWidth\n        className={classes.TextField}\n        id=\"name\"\n        label=\"name\"\n        onChange={(e) => setName(e.currentTarget.value)}\n        type=\"text\"\n        value={name}\n        variant=\"outlined\"\n        placeholder=\"enter  contact's name\"\n        helperText=\"The name can only consist of letters, apostrophes, dashes and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan, etc.\"\n      />\n      {errors.name && (\n        <Alert className={classes.Alert} severity=\"error\">\n          This field is required\n        </Alert>\n      )}\n      <TextField\n        value={number}\n        {...register(\"number\", {\n          required: true,\n          minLength: 10,\n        })}\n        onChange={(e) => setNumber(e.currentTarget.value)}\n        required\n        placeholder=\"enter  contact's number\"\n        fullWidth\n        className={classes.TextField}\n        id=\"number\"\n        label=\"number\"\n        type=\"phone\"\n        variant=\"outlined\"\n        helperText=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n      />\n      {errors.number && (\n        <Alert className={classes.Alert} severity=\"error\">\n          This field is required, it must be at least 10 characters long and\n          include numbers, spaces, + and parentheses\n        </Alert>\n      )}\n      <Button\n        type=\"submit\"\n        disableElevation\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"large\"\n      >\n        Add contact\n      </Button>\n    </form>\n  );\n}\n","import Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n// \"Это импорты для компонента списка\"\n\nimport Filter from \"./components/Filter\";\nimport ContactsList from \"./components/ContactsList\";\nimport Form from \"./components/Form\";\nconst useStyles = makeStyles({\n  Container: {\n    width: 400,\n    padding: 15,\n  },\n  Typography: {\n    marginBottom: 20,\n  },\n});\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <Container className={classes.Container} maxWidth=\"sm\">\n      <Typography\n        className={classes.Typography}\n        color=\"primary\"\n        align=\"left\"\n        variant=\"h1\"\n        component=\"h1\"\n      >\n        Phonebook\n      </Typography>\n      <Form />\n      <Typography\n        className={classes.Typography}\n        color=\"primary\"\n        align=\"left\"\n        variant=\"h3\"\n        component=\"h2\"\n      >\n        Phonebook\n      </Typography>\n      <Filter />\n      <ContactsList />\n    </Container>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport actions from \"./phonebook-actions\";\nconst initialItems = [];\nconst initialFilter = \"\";\nconst itemReducer = createReducer(initialItems, {\n  [actions.fetchContactsSuccess]: (_, { payload }) => payload,\n  [actions.addContactsSuccess]: (state, { payload }) => [...state, payload],\n  [actions.deleteContactsSuccess]: (state, { payload }) =>\n    state.filter((contact) => contact.id !== payload),\n});\nconst filterReducer = createReducer(initialFilter, {\n  [actions.filterContact]: (_, { payload }) => payload,\n});\n\nconst isLoading = createReducer(false, {\n  [actions.contactsRequest]: () => true,\n  [actions.fetchContactsSuccess]: () => false,\n  [actions.contactsError]: () => false,\n});\nconst error = createReducer(null, {\n  [actions.contactsRequest]: () => null,\n  [actions.contactsError]: (_, { payload }) => payload,\n});\n\nexport const contactsReducer = combineReducers({\n  items: itemReducer,\n  filter: filterReducer,\n  isLoading,\n  error,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { contactsReducer } from \"./phonebook/phonebook-redusers\";\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}